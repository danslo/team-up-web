div(ng-controller='team as team', style='padding-top: 1px;')
	.page-header
		h2.nullable {{ui.teamup.teams}}
		.selectGroup(ng-if='team.list.length > 1')
			span.selectTitles
				strong
					| {{ ui.teamup.selectTeam }}
			select(ng-model='team.current.teamId',
			ng-options='t.uuid as t.name for t in team.list | orderBy:"name"',
			ng-selected='team.current.teamId',
			ng-change='team.init(team.current.teamId)')
		
	.teams-section.tabbable.tabs-left
		ul.nav.nav-tabs.nav-tabs-app(style='margin-right: 0px;', bs-navbar)
			include ../teams/tabs
		.tab-content
			#newMemberTab.tab-pane(class="active")
				.tab-header
					h3.pull-left {{ui.teamup.newMember}}
				hr
				form.new-member-form(name='newMemberForm', novalidate)
					fieldset
						.row
							.span6
								fieldset
									.form-group
										label.control-label {{ui.profile.firstName}}
										.controls
											input.span4(type='text', 
												focus
												ng-model='member.form.firstName')
									.form-group
										label.control-label {{ui.profile.lastName}}
										.controls
											input.span4(type='text',
											ng-model='member.form.lastName')
									.form-group(ng-if='member.roles.length > 1')
										label.control-label {{ui.teamup.role}}
										.controls
											select(ng-model='member.form.role',
											ng-options='r.id as r.label for r in member.roles')
												option(value='') {{ui.teamup.chooseRole}}
									.form-group(ng-class="{ 'has-error' : newMemberForm.$error.pattern && !newMemberForm.email.$pristine }")
										label.control-label {{ ui.profile.email }}
										.controls
											input.span3.form-control(type='email',
											name='email',
											required,
											ng-model='member.form.email',
											ng-pattern=/^([A-z0-9-]+(?:\.[A-z0-9-]+)*)@((?:[A-z0-9-]+\.)*[A-z0-9-]{1,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i)
											span.help-block(ng-show='newMemberForm.$error.pattern && !newMemberForm.email.$pristine')
												small
													i
													| {{ ui.validation.email.notValid }}
									.form-group(ng-class="{'has-error': phoneNumberParsed.result == false}")
										label.control-label {{ui.teamup.phone}}
										.controls
											input.span3.form-control.inputPhoneNumber(type='text',
											ng-model='member.form.phone',
											ng-change='parsePhoneNumber(member.form.phone)')
											span.help-block
												small
													i {{phoneNumberParsed.message}}
							.span6
								fieldset
									.form-group(
									ng-class="{'has-error' : member.UserNameWrong || (!newMemberForm.username.$pristine && member.form.userName.length < 4)}")
										label.control-label {{ui.profile.username}}
										.controls
											input.span3.form-control(type='text', 
												name='username'
												ng-change="member.checkUserName()", 
												ng-blur='member.UserNameWrong=false',
												ng-model='member.form.userName',
												required)
										p.text-danger
											small(ng-show='member.UserNameWrong || (!newMemberForm.username.$pristine && member.form.userName.length < 4)')
												i {{ ui.validation.userName.valid }} {{ ui.validation.userName.amountMinChars(4) }} {{ui.validation.userName.regex }}
									.form-group(ng-class="{ 'has-error' : newMemberForm.password.$invalid && !newMemberForm.password.$pristine  }")
										label.control-label {{ui.profile.password}}
										.controls
											input.span3.form-control(type='password',
											ng-model='member.form.password',
											name='password',
											required,
											ng-minlength="8",
											ng-maxlength="20")
											span.help-block(ng-show='newMemberForm.password.$invalid && !newMemberForm.password.$pristine')
												small
													i
													| {{ ui.validation.password.required }}
												small(ng-show="newMemberForm.password.$error.minlength")
													i
													| {{ ui.validation.password.amountMinChars(8) }} 
												small(ng-show="newMemberForm.password.$error.maxlength")
													i
													| {{ ui.validation.password.amountMaxChars(20) }}
									.form-group(ng-class="{ 'has-error' : (member.form.reTypePassword !== member.form.password) && !newMemberForm.reTypePassword.$pristine }")
										label.control-label {{ui.profile.retypePassword}}
										.controls
											input.span3.form-control(type='password',
											ng-model='member.form.reTypePassword', name='reTypePassword')
											span.help-block(ng-show='(member.form.reTypePassword !== member.form.password) && !newMemberForm.reTypePassword.$pristine')
												small
													i
													| {{ ui.teamup.passNotSame }}
						.form-actions
							button.btn.btn-success(type='submit',
							ng-click='member.create(member.form, team.current.teamId)') {{ui.teamup.saveMember}}